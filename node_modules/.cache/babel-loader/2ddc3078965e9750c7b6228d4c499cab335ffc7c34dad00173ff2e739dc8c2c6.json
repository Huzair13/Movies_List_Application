{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport { Modal, Button } from 'react-bootstrap'; // Import modal components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null); // Track the selected movie for the modal\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:5000/') // Update the endpoint\n    .then(response => response.json()).then(data => {\n      setMovies(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    });\n  }, []);\n  const handleMovieClick = movie => {\n    setSelectedMovie(movie);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setSelectedMovie(null);\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-3\",\n      children: \"Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        onMovieClick: handleMovieClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), selectedMovie &&\n      /*#__PURE__*/\n      // Conditionally render the modal only if there is a selected movie\n      _jsxDEV(Modal, {\n        show: showModal,\n        onHide: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: selectedMovie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMovie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hopUiAkTsyWTGLyxbKubvEWT+EM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","loading","setLoading","selectedMovie","setSelectedMovie","showModal","setShowModal","fetch","then","response","json","data","catch","error","console","handleMovieClick","movie","handleCloseModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onMovieClick","show","onHide","Header","closeButton","Title","title","Body","description","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport { Modal, Button } from 'react-bootstrap'; // Import modal components\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null); // Track the selected movie for the modal\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/')  // Update the endpoint\n      .then((response) => response.json())\n      .then((data) => {\n        setMovies(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleMovieClick = (movie) => {\n    setSelectedMovie(movie);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedMovie(null);\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      <h1 className=\"text-center mt-3\">Movie List</h1>\n      {loading ? (\n        <p className=\"text-center\">Loading...</p>\n      ) : (\n        <>\n          <MovieList movies={movies} onMovieClick={handleMovieClick} />\n          {selectedMovie && ( // Conditionally render the modal only if there is a selected movie\n            <Modal show={showModal} onHide={handleCloseModal}>\n              <Modal.Header closeButton>\n                <Modal.Title>{selectedMovie.title}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <p>{selectedMovie.description}</p>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseModal}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\updateMovieForm.js\";\n// UpdateMovieForm.js\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UpdateMovieForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState(prevState => ({\n        updateData: {\n          ...prevState.updateData,\n          [name]: value\n        }\n      }));\n    };\n    this.handleUpdate = async () => {\n      try {\n        const {\n          movieName,\n          history\n        } = this.props;\n        const endpoint = `http://localhost:5000/movies/${encodeURIComponent(movieName)}`;\n        const response = await axios.put(endpoint, this.state.updateData);\n        console.log('Update response:', response.data);\n        // Handle the response as needed\n        // Redirect back to the movie list or handle in some way\n        history.push('/'); // Assuming your movie list is at the root path \"/\"\n      } catch (error) {\n        // Handle errors\n        console.error('Error updating movie:', error.message);\n      }\n    };\n    this.state = {\n      updateData: {\n        name: '',\n        language: '',\n        releaseYear: '',\n        rating: '',\n        director: ''\n      }\n    };\n  }\n  componentDidMount() {\n    const {\n      movieName\n    } = this.props.match.params;\n    // Fetch movie data based on the movieName and update state\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: this.state.updateData.name,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"language\",\n          value: this.state.updateData.language,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Release Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"releaseYear\",\n          value: this.state.updateData.releaseYear,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rating\",\n          value: this.state.updateData.rating,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"director\",\n          value: this.state.updateData.director,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(UpdateMovieForm);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","axios","withRouter","jsxDEV","_jsxDEV","UpdateMovieForm","constructor","props","handleInputChange","event","name","value","target","setState","prevState","updateData","handleUpdate","movieName","history","endpoint","encodeURIComponent","response","put","state","console","log","data","push","error","message","language","releaseYear","rating","director","componentDidMount","match","params","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/updateMovieForm.js"],"sourcesContent":["// UpdateMovieForm.js\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass UpdateMovieForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      updateData: {\r\n        name: '',\r\n        language: '',\r\n        releaseYear: '',\r\n        rating: '',\r\n        director: '',\r\n      },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { movieName } = this.props.match.params;\r\n    // Fetch movie data based on the movieName and update state\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      updateData: {\r\n        ...prevState.updateData,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n  \r\n\r\n  handleUpdate = async () => {\r\n    try {\r\n      const { movieName,history } = this.props;\r\n      const endpoint = `http://localhost:5000/movies/${encodeURIComponent(movieName)}`;\r\n      const response = await axios.put(endpoint, this.state.updateData);\r\n      console.log('Update response:', response.data);\r\n      // Handle the response as needed\r\n      // Redirect back to the movie list or handle in some way\r\n      history.push('/'); // Assuming your movie list is at the root path \"/\"\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error updating movie:', error.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Update Movie</h2>\r\n        <form>\r\n          {/* Input field for updating the name */}\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.updateData.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n\r\n          {/* Input field for updating the language */}\r\n          <label>Language:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"language\"\r\n            value={this.state.updateData.language}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n\r\n          {/* Input field for updating the release year */}\r\n          <label>Release Year:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"releaseYear\"\r\n            value={this.state.updateData.releaseYear}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n\r\n          {/* Input field for updating the rating */}\r\n          <label>Rating:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"rating\"\r\n            value={this.state.updateData.rating}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n\r\n          {/* Input field for updating the director */}\r\n          <label>Director:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"director\"\r\n            value={this.state.updateData.director}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <br />\r\n\r\n          {/* Button to trigger the update */}\r\n          <button type=\"button\" onClick={this.handleUpdate}>\r\n            Update\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default withRouter(UpdateMovieForm);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
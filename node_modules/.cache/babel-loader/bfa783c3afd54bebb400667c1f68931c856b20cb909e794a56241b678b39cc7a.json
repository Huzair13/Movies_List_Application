{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\updateMovieForm.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UpdateMovieForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState(prevState => ({\n        updateData: {\n          ...prevState.updateData,\n          [name]: value\n        }\n      }));\n    };\n    this.handleUpdate = async () => {\n      try {\n        const {\n          movieName\n        } = this.props.match.params;\n        const endpoint = `http://localhost:5000/movies/${encodeURIComponent(movieName)}`;\n        const response = await axios.put(endpoint, this.state.updateData);\n        console.log('Update response:', response.data);\n        // Handle the response as needed\n        // Redirect back to the movie list or handle in some way\n        this.props.history.push('/');\n      } catch (error) {\n        // Handle errors\n        console.error('Error updating movie:', error.message);\n      }\n    };\n    this.state = {\n      updateData: {\n        name: '',\n        language: '',\n        releaseYear: '',\n        rating: '',\n        director: ''\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Using the useHistory hook for access to the history object\nfunction UpdateMovieFormWrapper() {\n  _s();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(UpdateMovieForm, {\n    history: history\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_s(UpdateMovieFormWrapper, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = UpdateMovieFormWrapper;\nexport default UpdateMovieFormWrapper;\nvar _c;\n$RefreshReg$(_c, \"UpdateMovieFormWrapper\");","map":{"version":3,"names":["React","Component","axios","useHistory","jsxDEV","_jsxDEV","UpdateMovieForm","constructor","props","handleInputChange","event","name","value","target","setState","prevState","updateData","handleUpdate","movieName","match","params","endpoint","encodeURIComponent","response","put","state","console","log","data","history","push","error","message","language","releaseYear","rating","director","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","UpdateMovieFormWrapper","_s","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/updateMovieForm.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nclass UpdateMovieForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      updateData: {\r\n        name: '',\r\n        language: '',\r\n        releaseYear: '',\r\n        rating: '',\r\n        director: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      updateData: {\r\n        ...prevState.updateData,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleUpdate = async () => {\r\n    try {\r\n      const { movieName } = this.props.match.params;\r\n      const endpoint = `http://localhost:5000/movies/${encodeURIComponent(movieName)}`;\r\n      const response = await axios.put(endpoint, this.state.updateData);\r\n      console.log('Update response:', response.data);\r\n      // Handle the response as needed\r\n      // Redirect back to the movie list or handle in some way\r\n      this.props.history.push('/');\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error updating movie:', error.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Update Movie</h2>\r\n        <form>\r\n          {/* Input fields for updating the movie data */}\r\n          {/* ... */}\r\n          {/* Button to trigger the update */}\r\n          <button type=\"button\" onClick={this.handleUpdate}>\r\n            Update\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Using the useHistory hook for access to the history object\r\nfunction UpdateMovieFormWrapper() {\r\n  const history = useHistory();\r\n  return <UpdateMovieForm history={history} />;\r\n}\r\n\r\nexport default UpdateMovieFormWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,SAASL,SAAS,CAAC;EACtCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAYfC,iBAAiB,GAAIC,KAAK,IAAK;MAC7B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;MACpC,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,UAAU,EAAE;UACV,GAAGD,SAAS,CAACC,UAAU;UACvB,CAACL,IAAI,GAAGC;QACV;MACF,CAAC,CAAC,CAAC;IACL,CAAC;IAAA,KAEDK,YAAY,GAAG,YAAY;MACzB,IAAI;QACF,MAAM;UAAEC;QAAU,CAAC,GAAG,IAAI,CAACV,KAAK,CAACW,KAAK,CAACC,MAAM;QAC7C,MAAMC,QAAQ,GAAI,gCAA+BC,kBAAkB,CAACJ,SAAS,CAAE,EAAC;QAChF,MAAMK,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAACH,QAAQ,EAAE,IAAI,CAACI,KAAK,CAACT,UAAU,CAAC;QACjEU,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;QAC9C;QACA;QACA,IAAI,CAACpB,KAAK,CAACqB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACvD;IACF,CAAC;IAlCC,IAAI,CAACP,KAAK,GAAG;MACXT,UAAU,EAAE;QACVL,IAAI,EAAE,EAAE;QACRsB,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH;EA2BAC,MAAMA,CAAA,EAAG;IACP,oBACEhC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBrC,OAAA;QAAAiC,QAAA,eAIEjC,OAAA;UAAQsC,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAE,IAAI,CAAC3B,YAAa;UAAAqB,QAAA,EAAC;QAElD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV;AACF;;AAEA;AACA,SAASG,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMjB,OAAO,GAAG1B,UAAU,CAAC,CAAC;EAC5B,oBAAOE,OAAA,CAACC,eAAe;IAACuB,OAAO,EAAEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACI,EAAA,CAHQD,sBAAsB;EAAA,QACb1C,UAAU;AAAA;AAAA4C,EAAA,GADnBF,sBAAsB;AAK/B,eAAeA,sBAAsB;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
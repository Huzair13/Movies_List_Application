{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies\n}) => {\n  _s();\n  const [posters, setPosters] = useState({});\n  useEffect(() => {\n    const fetchPosters = async () => {\n      const apiKey = 'AIzaSyCVd9bozgBuibco9a4rqZkrtZj9f0MimU4';\n      const cx = '428701945382-ufjp578uc26s4i8rn1u7b122l51pomar.apps.googleusercontent.com';\n      const fetchPoster = async movieName => {\n        const searchQuery = `${movieName} movie poster`;\n        const apiUrl = `https://www.googleapis.com/customsearch/v1?q=${searchQuery}&key=${apiKey}&cx=${cx}`;\n        try {\n          const response = await fetch(apiUrl);\n          const data = await response.json();\n          if (data.items && data.items.length > 0) {\n            const posterUrl = data.items[0].link;\n            setPosters(prevPosters => ({\n              ...prevPosters,\n              [movieName]: posterUrl\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching poster:', error);\n        }\n      };\n      movies.forEach(movie => {\n        fetchPoster(movie.movieName);\n      });\n    };\n    fetchPosters();\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [posters[movie.movieName] && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: posters[movie.movieName],\n            className: \"card-img-top\",\n            alt: movie.movieName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: movie.movieName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Director: \", movie.director]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Language: \", movie.language]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"7sHVSfDUIEYMtPWcylHn5uGZcxM=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieList","movies","_s","posters","setPosters","fetchPosters","apiKey","cx","fetchPoster","movieName","searchQuery","apiUrl","response","fetch","data","json","items","length","posterUrl","link","prevPosters","error","console","forEach","movie","className","children","map","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","director","language","description","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const [posters, setPosters] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchPosters = async () => {\r\n      const apiKey = 'AIzaSyCVd9bozgBuibco9a4rqZkrtZj9f0MimU4';\r\n      const cx = '428701945382-ufjp578uc26s4i8rn1u7b122l51pomar.apps.googleusercontent.com';\r\n      \r\n      const fetchPoster = async (movieName) => {\r\n        const searchQuery = `${movieName} movie poster`;\r\n        const apiUrl = `https://www.googleapis.com/customsearch/v1?q=${searchQuery}&key=${apiKey}&cx=${cx}`;\r\n\r\n        try {\r\n          const response = await fetch(apiUrl);\r\n          const data = await response.json();\r\n\r\n          if (data.items && data.items.length > 0) {\r\n            const posterUrl = data.items[0].link;\r\n            setPosters((prevPosters) => ({ ...prevPosters, [movieName]: posterUrl }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching poster:', error);\r\n        }\r\n      };\r\n\r\n      movies.forEach((movie) => {\r\n        fetchPoster(movie.movieName);\r\n      });\r\n    };\r\n\r\n    fetchPosters();\r\n  }, [movies]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        {movies.map((movie, index) => (\r\n          <div key={index} className=\"col-md-4 mb-4\">\r\n            <div className=\"card\">\r\n              {posters[movie.movieName] && (\r\n                <img\r\n                  src={posters[movie.movieName]}\r\n                  className=\"card-img-top\"\r\n                  alt={movie.movieName}\r\n                />\r\n              )}\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.movieName}</h5>\r\n                <p className=\"card-text\">Director: {movie.director}</p>\r\n                <p className=\"card-text\">Language: {movie.language}</p>\r\n                <p className=\"card-text\">{movie.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
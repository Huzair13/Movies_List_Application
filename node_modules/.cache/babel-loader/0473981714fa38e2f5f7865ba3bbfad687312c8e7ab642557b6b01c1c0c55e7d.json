{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies\n}) => {\n  _s();\n  const [movieData, setMovieData] = useState([]);\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      const apiKey = '5aefe5fe';\n      const baseUrl = 'https://api.themoviedb.org/';\n      const moviePromises = movies.map(async movie => {\n        const response = await fetch(`${baseUrl}?api_key=${apiKey}&query=${encodeURIComponent(movie)}`);\n        const data = await response.json();\n        return data.results[0]; // Take the first result, assuming it's the most relevant.\n      });\n      const movieResults = await Promise.all(moviePromises);\n      setMovieData(movieResults);\n    };\n    fetchMovieData();\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movieData.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            className: \"card-img-top\",\n            alt: `${movie.title} Poster`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"0i7gn3bvDfvcqE2eVd43YC0z00M=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MovieList","movies","_s","movieData","setMovieData","fetchMovieData","apiKey","baseUrl","moviePromises","map","movie","response","fetch","encodeURIComponent","data","json","results","movieResults","Promise","all","className","children","index","poster_path","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieData = async () => {\r\n      const apiKey = '5aefe5fe';\r\n      const baseUrl = 'https://api.themoviedb.org/';\r\n\r\n      const moviePromises = movies.map(async (movie) => {\r\n        const response = await fetch(\r\n          `${baseUrl}?api_key=${apiKey}&query=${encodeURIComponent(movie)}`\r\n        );\r\n        const data = await response.json();\r\n        return data.results[0]; // Take the first result, assuming it's the most relevant.\r\n      });\r\n\r\n      const movieResults = await Promise.all(moviePromises);\r\n      setMovieData(movieResults);\r\n    };\r\n\r\n    fetchMovieData();\r\n  }, [movies]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        {movieData.map((movie, index) => (\r\n          <div key={index} className=\"col-md-4 mb-4\">\r\n            <div className=\"card\">\r\n              {movie.poster_path && (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                  className=\"card-img-top\"\r\n                  alt={`${movie.title} Poster`}\r\n                />\r\n              )}\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.title}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,MAAM,GAAG,UAAU;MACzB,MAAMC,OAAO,GAAG,6BAA6B;MAE7C,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAG,CAAC,MAAOC,KAAK,IAAK;QAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEL,OAAQ,YAAWD,MAAO,UAASO,kBAAkB,CAACH,KAAK,CAAE,EAClE,CAAC;QACD,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACX,aAAa,CAAC;MACrDJ,YAAY,CAACa,YAAY,CAAC;IAC5B,CAAC;IAEDZ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BtB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBlB,SAAS,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEY,KAAK,kBAC1BvB,OAAA;QAAiBqB,SAAS,EAAC,eAAe;QAAAC,QAAA,eACxCtB,OAAA;UAAKqB,SAAS,EAAC,MAAM;UAAAC,QAAA,GAClBX,KAAK,CAACa,WAAW,iBAChBxB,OAAA;YACEyB,GAAG,EAAG,kCAAiCd,KAAK,CAACa,WAAY,EAAE;YAC3DH,SAAS,EAAC,cAAc;YACxBK,GAAG,EAAG,GAAEf,KAAK,CAACgB,KAAM;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CACF,eACD/B,OAAA;YAAKqB,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxBtB,OAAA;cAAIqB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEX,KAAK,CAACgB;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAZER,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA7CIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\updateMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateMovieForm = ({\n  isUpdateForm,\n  location\n}) => {\n  _s();\n  const [movieData, setMovieData] = useState({\n    movieName: '',\n    language: '',\n    director: '',\n    releaseYear: '',\n    rating: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isUpdateForm && location.state && location.state.movieData) {\n      // If in update mode and movie data is provided, pre-fill the form\n      setMovieData(location.state.movieData);\n    }\n  }, [isUpdateForm, location.state]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setMovieData({\n      ...movieData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedMovieData = {\n        ...movieData,\n        releaseYear: parseInt(movieData.releaseYear),\n        rating: parseInt(movieData.rating)\n      };\n      if (isUpdateForm) {\n        // Update existing movie\n        const response = await axios.put(`http://localhost:5000/update?movieName=${encodeURIComponent(movieData.movieName)}`, updatedMovieData);\n        console.log('Update response:', response.data);\n      } else {\n        // Add new movie\n        const response = await axios.post('http://localhost:5000/addMovies', updatedMovieData);\n        console.log('Add response:', response.data);\n      }\n\n      // Redirect to the movie list page\n      navigate('/');\n\n      // Reload the page after a delay (adjust the delay as needed)\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: isUpdateForm ? 'Update Movie' : 'Add New Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"movieName\",\n          className: \"form-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"movieName\",\n          name: \"movieName\",\n          value: movieData.movieName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language\",\n          className: \"form-label\",\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"language\",\n          name: \"language\",\n          value: movieData.language,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"director\",\n          className: \"form-label\",\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"director\",\n          name: \"director\",\n          value: movieData.director,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"releaseYear\",\n          className: \"form-label\",\n          children: \"Release Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"releaseYear\",\n          name: \"releaseYear\",\n          value: movieData.releaseYear,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rating\",\n          className: \"form-label\",\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"rating\",\n          name: \"rating\",\n          value: movieData.rating,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: isUpdateForm ? 'Update Movie' : 'Add Movie'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateMovieForm, \"BHe+VZ+O0dwjGe0tSCCcqx65Enw=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateMovieForm;\nexport default UpdateMovieForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateMovieForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","UpdateMovieForm","isUpdateForm","location","_s","movieData","setMovieData","movieName","language","director","releaseYear","rating","navigate","state","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","updatedMovieData","parseInt","response","put","encodeURIComponent","console","log","data","post","setTimeout","window","reload","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/updateMovie.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UpdateMovieForm = ({ isUpdateForm, location }) => {\r\n  const [movieData, setMovieData] = useState({\r\n    movieName: '',\r\n    language: '',\r\n    director: '',\r\n    releaseYear: '',\r\n    rating: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (isUpdateForm && location.state && location.state.movieData) {\r\n      // If in update mode and movie data is provided, pre-fill the form\r\n      setMovieData(location.state.movieData);\r\n    }\r\n  }, [isUpdateForm, location.state]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMovieData({ ...movieData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const updatedMovieData = {\r\n        ...movieData,\r\n        releaseYear: parseInt(movieData.releaseYear),\r\n        rating: parseInt(movieData.rating),\r\n      };\r\n\r\n      if (isUpdateForm) {\r\n        // Update existing movie\r\n        const response = await axios.put(\r\n          `http://localhost:5000/update?movieName=${encodeURIComponent(\r\n            movieData.movieName\r\n          )}`,\r\n          updatedMovieData\r\n        );\r\n        console.log('Update response:', response.data);\r\n      } else {\r\n        // Add new movie\r\n        const response = await axios.post(\r\n          'http://localhost:5000/addMovies',\r\n          updatedMovieData\r\n        );\r\n        console.log('Add response:', response.data);\r\n      }\r\n\r\n      // Redirect to the movie list page\r\n      navigate('/');\r\n\r\n      // Reload the page after a delay (adjust the delay as needed)\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">\r\n        {isUpdateForm ? 'Update Movie' : 'Add New Movie'}\r\n      </h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"movieName\" className=\"form-label\">\r\n            Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"movieName\"\r\n            name=\"movieName\"\r\n            value={movieData.movieName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"language\" className=\"form-label\">\r\n            Language:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"language\"\r\n            name=\"language\"\r\n            value={movieData.language}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"director\" className=\"form-label\">\r\n            Director:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"director\"\r\n            name=\"director\"\r\n            value={movieData.director}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"releaseYear\" className=\"form-label\">\r\n            Release Year:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"releaseYear\"\r\n            name=\"releaseYear\"\r\n            value={movieData.releaseYear}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"rating\" className=\"form-label\">\r\n            Rating:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"rating\"\r\n            name=\"rating\"\r\n            value={movieData.rating}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {isUpdateForm ? 'Update Movie' : 'Add Movie'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMovieForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
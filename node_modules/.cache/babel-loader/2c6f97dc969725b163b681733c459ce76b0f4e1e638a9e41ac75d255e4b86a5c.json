{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\UpdateMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateMovieForm = ({\n  movieName,\n  initialData\n}) => {\n  _s();\n  const [updateData, setUpdateData] = useState(initialData || {});\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdateData({\n      ...updateData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Remove null or undefined values from the updateData\n      const filteredUpdateData = Object.fromEntries(Object.entries(updateData).filter(([key, value]) => value != null));\n      const response = await axios.put(`http://localhost:5000/movies/${movieName}`, filteredUpdateData);\n      console.log(response.data);\n      navigate('/');\n\n      // Reload the page after a delay (adjust the delay as needed)\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n    } catch (error) {\n      console.error('Error updating movie:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Update Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [Object.keys(updateData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          className: \"form-label\",\n          children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: key,\n          name: key,\n          value: updateData[key],\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateMovieForm, \"ALkT6PYGMLPCYAirEZkc4H7PKSk=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateMovieForm;\nexport default UpdateMovieForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateMovieForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","UpdateMovieForm","movieName","initialData","_s","updateData","setUpdateData","navigate","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","filteredUpdateData","Object","fromEntries","entries","filter","key","response","put","console","log","data","setTimeout","window","location","reload","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","keys","map","htmlFor","charAt","toUpperCase","slice","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/UpdateMovie.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UpdateMovieForm = ({ movieName, initialData }) => {\r\n  const [updateData, setUpdateData] = useState(initialData || {});\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdateData({ ...updateData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Remove null or undefined values from the updateData\r\n      const filteredUpdateData = Object.fromEntries(\r\n        Object.entries(updateData).filter(([key, value]) => value != null)\r\n      );\r\n\r\n      const response = await axios.put(\r\n        `http://localhost:5000/movies/${movieName}`,\r\n        filteredUpdateData\r\n      );\r\n      console.log(response.data);\r\n\r\n      navigate('/');\r\n\r\n      // Reload the page after a delay (adjust the delay as needed)\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    } catch (error) {\r\n      console.error('Error updating movie:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">Update Movie</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        {/* Render input fields dynamically based on updateData */}\r\n        {Object.keys(updateData).map((key) => (\r\n          <div className=\"mb-3\" key={key}>\r\n            <label htmlFor={key} className=\"form-label\">\r\n              {key.charAt(0).toUpperCase() + key.slice(1)}:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id={key}\r\n              name={key}\r\n              value={updateData[key]}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Update\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMovieForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport Search from './searchMovie';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: MovieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/update/:movieName\",\n      component: UpdateMovieForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:5000/') // Update the endpoint\n    .then(response => response.json()).then(data => {\n      setMovies(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mt-3\",\n      children: \"Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 65\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"72fwlr08e18pammocXupWZZTEwc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","Search","BrowserRouter","Router","Route","jsxDEV","_jsxDEV","App","_s","children","path","exact","component","fileName","_jsxFileName","lineNumber","columnNumber","UpdateMovieForm","movies","setMovies","loading","setLoading","fetch","then","response","json","data","catch","error","console","className","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport Search from './searchMovie';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst App = () => {\n    <Router>\n      <Route path=\"/\" exact component={MovieList} />\n      <Route path=\"/update/:movieName\" component={UpdateMovieForm} />\n  </Router>\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('http://localhost:5000/')  // Update the endpoint\n      .then((response) => response.json())\n      .then((data) => {\n        setMovies(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      });\n  }, []);\n\n\n  return (\n    <div>\n      \n      <h1 className=\"text-center mt-3\">Movie List</h1>\n      <Search/>\n      {loading ? (<p className=\"text-center\">Loading...</p>) : (<MovieList movies={movies}  />)}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,aAAAF,OAAA,CAACH,MAAM;IAAAM,QAAA,gBACLH,OAAA,CAACF,KAAK;MAACM,IAAI,EAAC,GAAG;MAACC,KAAK;MAACC,SAAS,EAAEZ;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CV,OAAA,CAACF,KAAK;MAACM,IAAI,EAAC,oBAAoB;MAACE,SAAS,EAAEK;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;EACT,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,wBAAwB,CAAC,CAAE;IAAA,CAC9BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,SAAS,CAACO,IAAI,CAAC;MACfL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEf,OAAA;IAAAG,QAAA,gBAEEH,OAAA;MAAIwB,SAAS,EAAC,kBAAkB;MAAArB,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDV,OAAA,CAACL,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACRI,OAAO,gBAAId,OAAA;MAAGwB,SAAS,EAAC,aAAa;MAAArB,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAKV,OAAA,CAACN,SAAS;MAACkB,MAAM,EAAEA;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAACR,EAAA,CA9BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
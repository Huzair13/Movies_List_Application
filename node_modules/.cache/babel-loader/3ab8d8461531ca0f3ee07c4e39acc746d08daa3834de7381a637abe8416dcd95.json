{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport Search from './searchMovie';\nimport Filter from './Filter';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport MovieForm from './AddMovieForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  useEffect(() => {\n    const endpoint = 'http://localhost:5000/';\n    fetchMovies(endpoint);\n  }, []);\n  const fetchMovies = async endpoint => {\n    try {\n      console.log('Fetching movies with endpoint:', endpoint);\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      console.log('Received movies data:', data);\n      setMovies(data);\n      setFilteredMovies(data);\n      console.log(\"eeeeeeeeeeeeeeee\");\n      console.log(filteredMovies);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Filtered Movies updated:\", filteredMovies);\n  }, [filteredMovies]);\n  const handleFilterChange = async ({\n    filterBy,\n    value\n  }) => {\n    try {\n      // Construct the endpoint based on the selected filterBy and value\n      const endpoint = `http://localhost:5000/filterName?${encodeURIComponent(filterBy)}=${encodeURIComponent(value)}`;\n      console.log(endpoint);\n\n      // Fetch movies with the updated endpoint\n      const response = await fetch(endpoint);\n      const filteredData = await response.json();\n\n      // Update the filteredMovies state with the filtered data\n      setFilteredMovies(filteredData);\n    } catch (error) {\n      console.error('Error fetching filtered movies:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-3\",\n        children: \"Movie List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-movie\",\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-movie\",\n          component: MovieForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Filter, {\n              onFilterChange: handleFilterChange,\n              movies: movies,\n              setFilteredMovies: setFilteredMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(MovieList, {\n              movies: filteredMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FjpcIL4BcZVdTvt43Ygq/2CpDUs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","Search","Filter","BrowserRouter","Router","Route","Link","MovieForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","loading","setLoading","filteredMovies","setFilteredMovies","endpoint","fetchMovies","console","log","response","fetch","data","json","error","handleFilterChange","filterBy","value","encodeURIComponent","filteredData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","Switch","path","component","render","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieList from './MovieList';\nimport Search from './searchMovie'\nimport Filter from './Filter';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport MovieForm from './AddMovieForm';\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n\n  useEffect(() => {\n    const endpoint='http://localhost:5000/'\n    fetchMovies(endpoint);\n  }, []);\n\n  const fetchMovies = async (endpoint) => {\n    try {\n      console.log('Fetching movies with endpoint:', endpoint);\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      console.log('Received movies data:', data);\n      setMovies(data);\n      setFilteredMovies(data);\n      console.log(\"eeeeeeeeeeeeeeee\")\n      console.log(filteredMovies);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    console.log(\"Filtered Movies updated:\", filteredMovies);\n}, [filteredMovies]);\n\n  \n\nconst handleFilterChange = async ({ filterBy, value }) => {\n  try {\n      // Construct the endpoint based on the selected filterBy and value\n      const endpoint = `http://localhost:5000/filterName?${encodeURIComponent(filterBy)}=${encodeURIComponent(value)}`;\n      console.log(endpoint);\n\n      // Fetch movies with the updated endpoint\n      const response = await fetch(endpoint);\n      const filteredData = await response.json();\n\n      // Update the filteredMovies state with the filtered data\n      setFilteredMovies(filteredData);\n  } catch (error) {\n      console.error('Error fetching filtered movies:', error);\n  }\n};\n\n  \n\n  return (\n    <Router>\n      <div>\n      <h1 className=\"text-center mt-3\">Movie List</h1>\n      <Link to=\"/add-movie\">Add Movie</Link>\n      <Switch>\n          <Route path=\"/add-movie\" component={MovieForm} />\n          <Route path=\"/\" render={() => (\n            <>\n              <Search />\n              <Filter onFilterChange={handleFilterChange} movies={movies} setFilteredMovies={setFilteredMovies} />\n              {loading ? (\n                <p className=\"text-center\">Loading...</p>\n              ) : (\n                <MovieList movies={filteredMovies} />\n              )}\n            </>\n          )} />\n        </Switch>\n    </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
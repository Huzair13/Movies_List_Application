{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\Desktop\\\\presidio_task_movie_list_application\\\\frontend_presidio_movie_list_app\\\\src\\\\MovieListFile.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = async movieName => {\n      try {\n        const endpoint = `http://localhost:5000/delete?movieName=${encodeURIComponent(movieName)}`;\n        console.log('DELETE endpoint:', endpoint);\n        const response = await axios.delete(endpoint);\n        console.log('DELETE response:', response);\n\n        // Handle the response as needed\n        console.log('Delete successful:', response.data);\n\n        // After deleting, you may want to fetch the updated movie data\n        window.location.reload();\n      } catch (error) {\n        // Handle errors\n        console.error('Error deleting movie:', error.message);\n      }\n    };\n    this.fetchMovieData = async () => {\n      const {\n        movies\n      } = this.props;\n      const apiKey = '5aefe5fe';\n      const baseUrl = 'http://www.omdbapi.com/';\n      const moviePosters = await Promise.all(movies.map(async movie => {\n        try {\n          const response = await axios.get(`${baseUrl}?apikey=${apiKey}&t=${encodeURIComponent(movie)}&type=movie`);\n          const data = response.data;\n          if (data && data.Title && data.Type === 'movie') {\n            return {\n              name: movie,\n              poster: data.Poster\n            };\n          } else {\n            return {\n              name: movie,\n              poster: null\n            };\n          }\n        } catch (error) {\n          console.error(`Error fetching data for ${movie}`, error);\n          return null;\n        }\n      }));\n      const movieResults = moviePosters.filter(movie => movie !== null && typeof movie.name === 'string');\n      this.setState({\n        movieData: movieResults\n      });\n    };\n    this.state = {\n      movieData: []\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.movies !== this.props.movies) {\n      this.fetchMovieData();\n    }\n  }\n  componentDidMount() {\n    this.fetchMovieData();\n  }\n  render() {\n    const {\n      movieData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movieData.sort((a, b) => a.name.localeCompare(b.name)) // Sort movies alphabetically by name\n        .map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [movie.poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster,\n              className: \"card-img-top\",\n              alt: `${movie.name} Poster`,\n              style: {\n                height: '500px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-poster\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Image Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: movie.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginRight: '8px'\n                },\n                className: \"btn btn-danger\",\n                onClick: () => this.handleDelete(movie.name),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MovieList;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","MovieList","constructor","props","handleDelete","movieName","endpoint","encodeURIComponent","console","log","response","delete","data","window","location","reload","error","message","fetchMovieData","movies","apiKey","baseUrl","moviePosters","Promise","all","map","movie","get","Title","Type","name","poster","Poster","movieResults","filter","setState","movieData","state","bind","componentDidUpdate","prevProps","componentDidMount","render","className","children","sort","a","b","localeCompare","index","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","onClick"],"sources":["C:/Users/ahame/Desktop/presidio_task_movie_list_application/frontend_presidio_movie_list_app/src/MovieListFile.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nclass MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieData: [],\r\n    };\r\n\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.movies !== this.props.movies) {\r\n      this.fetchMovieData();\r\n    }\r\n  }\r\n\r\n  handleDelete = async (movieName) => {\r\n    try {\r\n      const endpoint = `http://localhost:5000/delete?movieName=${encodeURIComponent(\r\n        movieName\r\n      )}`;\r\n      console.log('DELETE endpoint:', endpoint);\r\n\r\n      const response = await axios.delete(endpoint);\r\n      console.log('DELETE response:', response);\r\n\r\n      // Handle the response as needed\r\n      console.log('Delete successful:', response.data);\r\n\r\n      // After deleting, you may want to fetch the updated movie data\r\n      window.location.reload();\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error deleting movie:', error.message);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieData();\r\n  }\r\n\r\n  fetchMovieData = async () => {\r\n    const { movies } = this.props;\r\n    const apiKey = '5aefe5fe';\r\n    const baseUrl = 'http://www.omdbapi.com/';\r\n  \r\n    const moviePosters = await Promise.all(\r\n      movies.map(async (movie) => {\r\n        try {\r\n          const response = await axios.get(\r\n            `${baseUrl}?apikey=${apiKey}&t=${encodeURIComponent(movie)}&type=movie`\r\n          );\r\n  \r\n          const data = response.data;\r\n  \r\n          if (data && data.Title && data.Type === 'movie') {\r\n            return {\r\n              name: movie,\r\n              poster: data.Poster,\r\n            };\r\n          } else {\r\n            return {\r\n              name: movie,\r\n              poster: null,\r\n            };\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error fetching data for ${movie}`, error);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  \r\n    const movieResults = moviePosters.filter(\r\n      (movie) => movie !== null && typeof movie.name === 'string'\r\n    );\r\n    this.setState({ movieData: movieResults });\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { movieData } = this.state;\r\n\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          {movieData\r\n            .sort((a, b) => a.name.localeCompare(b.name)) // Sort movies alphabetically by name\r\n            .map((movie, index) => (\r\n              <div key={index} className=\"col-md-4 mb-4\">\r\n                <div className=\"card\">\r\n                  {movie.poster ? (\r\n                    <img\r\n                      src={movie.poster}\r\n                      className=\"card-img-top\"\r\n                      alt={`${movie.name} Poster`}\r\n                      style={{ height: '500px' }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"no-poster\">\r\n                      <p>No Image Found</p>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.name}</h5>\r\n                    <button\r\n                      style={{ marginRight: '8px' }}\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.handleDelete(movie.name)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}